CREATE DATABASE BANK;
USE BANK;

CREATE OR REPLACE TABLE ACCOUNT
(
account_id INT PRIMARY KEY,
district_id INT,
frequency VARCHAR(40),
date DATE,
account_type VARCHAR(100),
card_assigned VARCHAR(20)
);


CREATE OR REPLACE TABLE card
(
card_id int primary key,
disp_id int,
type char(50),
issued DATE,
FOREIGN KEY (disp_id) REFERENCES Disposition(disp_id)
);

CREATE OR REPLACE TABLE client
(
client_id int primary key,
sex char(10),
Birth_date date,
district_id INT,
foreign key(district_id) references district(district_code)
);

CREATE OR REPLACE TABLE district 
(
District_code INt Primary key,
District_Name VARCHAR(100),
Region VARCHAR(100),
No_of_inhabitants INT,
No_of_municipalities_with_inhabitants_less_than_499 INT,
No_of_municipalities_with_inhabitants_500_btw_1999 INT,
No_of_municipalities_with_inhabitants_2000_btw_1999 INT,
No_of_municipalities_with_inhabitants_less_10000 INT,
No_of_cities INT,
Ratio_of_urban_inhabitants FLOAT,
Average_salary INT,
No_of_enterpreneurs_per_inhabitants INT,
No_of_committed_crime_2017 INT,
No_of_committed_crime_2018 INT
);

Create or replace table loan
(
loan_id INT,
account_id INT,
Date varchar,
amount INT,
duration INT,
paymrnts INT,
status VARCHAR(35),
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);



CREATE OR REPLACE TABLE transactions
(
trans_id INT,
account_id INT,
date DATE,
Type Varchar(40),
operation Varchar(50),
amount INT,
balance INT,
Purpose Varchar(40),
bank Varchar(45),
account_partner_id INT,
Foreign key (account_id) references ACCOUNT(account_id) 
);

CREATE OR REPLACE TABLE ORDER_
(
order_id INT primary key,
account_id INT,
bank_to Varchar(45),
account_to INT,
amount FLOAT,
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);

CREATE OR REPLACE TABLE disposition
(
disp_id INT primary key,
client_id INT,
account_id INT,
type CHAR(15),
FOREIGN KEY(account_id) references ACCOUNT(account_id),
FOREIGN KEY(client_id) references CLIENT(client_id)
);

CREATE OR REPLACE STORAGE integration s3_int
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = s3
ENABLED = TRUE
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::186165438532:role/bankrole_'
STORAGE_ALLOWED_LOCATIONS = ('s3://myczechbankdatap/');

DESC integration s3_int;

create or replace STAGE BANK
URL = 's3://myczechbankdatap'
file_format = CSV
storage_integration = s3_int;

LIST @BANK;

SHOW STAGES;

-- CREATE SNOWPIPE THAT RECOGNISES CSV THAT ARE INGESTED FROM EXTERNAL STAGE AND COPIES THE DATA INTO EXISTING TABLE.

-- The AUTO_INGEST=true parameter specifies to read .
--- event notifications sent from an S3 bucket to an SQS queue when new data is ready to load.

CREATE OR REPLACE PIPE BANK_SNOWPIPE_DISTRICT AUTO_INGEST = TRUE AS
COPY INTO BANK.PUBLIC.DISTRICT
FROM '@BANK/District/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_ACCOUNT AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."ACCOUNT"
FROM '@BANK/Account/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_txns AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."TRANSACTIONS"
FROM '@BANK/Trnx/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_DISP AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."DISPOSITION"
FROM '@BANK/disp/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_CARD AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."CARD"
FROM '@BANK/Card/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_order_list AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."ORDER_"
FROM '@BANK/Order/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_LOAN AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."LOAN"
FROM '@BANK/Loan/'
FILE_FORMAT = CSV1;

CREATE OR REPLACE PIPE BANK_SNOWPIPE_CLIENT AUTO_INGEST = TRUE AS
COPY INTO "BANK"."PUBLIC"."CLIENT"
FROM '@BANK/Client/'
FILE_FORMAT = CSV1;

SHOW PIPES;

SELECT COUNT(*) FROM DISTRICT;
SELECT COUNT(*) FROM ACCOUNT;
SELECT COUNT(*) FROM TRANSACTIONS;
SELECT COUNT(*) FROM DISPOSITION;
SELECT COUNT(*) FROM CARD;
SELECT COUNT(*) FROM ORDER_;
SELECT COUNT(*) FROM LOAN;
SELECT COUNT(*) FROM CLIENT;

ALTER PIPE BANK_SNOWPIPE_DISTRICT refresh;
ALTER PIPE BANK_SNOWPIPE_ACCOUNT refresh;
ALTER PIPE BANK_SNOWPIPE_TXNS refresh;
ALTER PIPE BANK_SNOWPIPE_DISP refresh;
ALTER PIPE BANK_SNOWPIPE_CARD refresh;
ALTER PIPE BANK_SNOWPIPE_ORDER_LIST refresh;
ALTER PIPE BANK_SNOWPIPE_LOAN refresh;
ALTER PIPE BANK_SNOWPIPE_CLIENT refresh;

-- CREATE FILE_FORMAT_ 
CREATE FILE FORMAT CSV1
TYPE = CSV
COMPRESSION = AUTO
RECORD_DELIMITER = '\n'
FIELD_DELIMITER = ','
SKIP_HEADER = 1;

select* from Account;

select * from DISTRICT;
select* from ACCOUNT;
select* from TRANSACTIONS;
select* from  CARD;
select* from  ORDER_;
select* from  LOAN;
select* from CLIENT;
